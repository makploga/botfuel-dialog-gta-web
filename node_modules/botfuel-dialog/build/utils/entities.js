'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Copyright (c) 2017 - present, Botfuel (https://www.botfuel.io).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var isEqual = require('lodash/isEqual');
var intersection = require('lodash/intersection');

var makePositionsArray = exports.makePositionsArray = function makePositionsArray(entity) {
  return Array(entity.end - entity.start).fill().map(function (_, i) {
    return i + entity.start;
  });
};

var doEntitiesIntersect = exports.doEntitiesIntersect = function doEntitiesIntersect(entityA, entityB) {
  return !!intersection(makePositionsArray(entityA), makePositionsArray(entityB)).length;
};

var filterIntersectingEntities = exports.filterIntersectingEntities = function filterIntersectingEntities(entities, entity) {
  if (entity.start == null || entity.end == null) {
    return entities.filter(function (e) {
      return !isEqual(e, entity);
    });
  }

  return entities.filter(function (e) {
    return !doEntitiesIntersect(e, entity);
  });
};

var getEntityInitialValue = exports.getEntityInitialValue = function getEntityInitialValue(initialValue) {
  return function (entity) {
    return Array.isArray(initialValue) ? [entity] : entity;
  };
};